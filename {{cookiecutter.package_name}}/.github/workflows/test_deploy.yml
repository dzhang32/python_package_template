name: test_deploy

on:
  push:
    branches: [ main ]
    tags: [ '*' ]
  pull_request:
    branches: [ main ]

env:
  PYTHON_VERSION: "{{cookiecutter.python_version}}"

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python and install dependencies
        uses: ./.github/actions/setup
        with:
          python-version: {% raw %}${{ env.PYTHON_VERSION }}{% endraw %}
          dependencies: dev

      - name: Run tests
        run: pytest

  {% if cookiecutter.include_docs == 'y' %}
  deploy-docs:
    runs-on: ubuntu-latest

    # Do not run on git tag (i.e. releases).
    # Only runs if tests pass.
    if: {% raw %}${{ !startsWith(github.ref, 'refs/tags/') }}{% endraw %}
    needs: [test]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python and install dependencies
        uses: ./.github/actions/setup
        with:
          python-version: {% raw %}${{ env.PYTHON_VERSION }}{% endraw %}
          dependencies: docs

      - name: Build documentation
        run: |
          cp README.md docs/index.md
          cp CHANGELOG.md docs/changelog.md
          # --strict errors on any warnings.
          # builds the site to ./site.
          mkdocs build --strict

      - name: Deploy to GitHub Pages
        # Only trigger on push to main branch.
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: {% raw %}${{ secrets.GITHUB_TOKEN }}{% endraw %}
          publish_dir: ./site
  {% endif %}

  {% if cookiecutter.include_pypi == 'y' %}
  deploy-pypi:
    runs-on: ubuntu-latest

    # Only runs on git tag and if tests pass.
    if: startsWith(github.ref, 'refs/tags/')
    needs: [test]

    # Authenticate for PyPI publishing.
    permissions:
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python and install dependencies
        uses: ./.github/actions/setup
        with:
          python-version: {% raw %}${{ env.PYTHON_VERSION }}{% endraw %}
          dependencies: build

      - name: Build package
        run: python -m build

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
  {% endif %}